package springmvc.demo.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.query.Query;
import org.springframework.stereotype.Repository;

import springmvc.demo.entity.Color;
import springmvc.demo.entity.Product;
@Repository
public class ColorDaoImpl extends BaseDao implements ColorsDao {

	private final boolean YES=true;
	private final boolean NO=false;
	private StringBuffer sql() {
		StringBuffer  sql = new StringBuffer();
		sql.append("select Product.product_id, Product.name, Product.price, Product.sale, Product.title, Product.details, Product.highlight, Product.new_product, Product.size, Product.created_at, Product.update_at, Product.amount, Product.voucher_id, ");
		sql.append("Color.color_id, Color.name as name_color, Color.code, Color.img ");
		sql.append("from  Color inner join ");
		sql.append("Product on Color.product_id = Product.product_id ");
		return sql;
	}
	
	private String sqlProductNew(boolean productNew, boolean highLight) {
		StringBuffer sql = sql();
		sql.append("where 1= 1 ");
		if(productNew) {
			sql.append("and Product.new_product= 1 ");
		}
		if (highLight) {
			sql.append("and Product.highlight= 1 ");
		}
		sql.append("group by Product.product_id, Product.name, Product.price, Product.sale, Product.title, Product.details, Product.highlight, Product.new_product, Product.size, Product.created_at, Product.update_at, Product.amount, Product.voucher_id, ");
		sql.append("Color.color_id, Color.name, Color.code, Color.img, Color.product_id order by Product.created_at");
		return sql.toString();
	}
//	@Override
//	public List<Color> getDsColorsByIDProduct(String id) {
//		Session currentSession = sessionFactory.getCurrentSession();
//		Query<Color> theQuery = currentSession.createQuery(" from Color c where c.product.productId=:id", Color.class);
//		theQuery.setParameter("id", id);
//		// execute query and get result list
//		List<Color> color = (List<Color>) theQuery.getResultList();
//		// return the results
//		return color;
//	}
	@Override
	public List<Color> getDsColorsByIDProduct(String id) {
		Session currentSession = sessionFactory.getCurrentSession();
		Query<Color> theQuery = currentSession.createQuery(" from Color c where c.product.productId=:id", Color.class);
		theQuery.setParameter("id", id);
		// execute query and get result list
		List<Color> color = (List<Color>) theQuery.getResultList();
		// return the results
		return color;
	}


}
